import e from"/@npm/ansi-styles";import t from"/@npm/supports-color";var r={stringReplaceAll:(e,t,r)=>{let n=e.indexOf(t);if(-1===n)return e;const s=t.length;let l=0,o="";do{o+=e.substr(l,n-l)+t+r,l=n+s,n=e.indexOf(t,l)}while(-1!==n);return o+=e.substr(l),o},stringEncaseCRLFWithFirstIndex:(e,t,r,n)=>{let s=0,l="";do{const o="\r"===e[n-1];l+=e.substr(s,(o?n-1:n)-s)+t+(o?"\r\n":"\n")+r,s=n+1,n=e.indexOf("\n",s)}while(-1!==n);return l+=e.substr(s),l}};const n=/(?:\\(u(?:[a-f\d]{4}|\{[a-f\d]{1,6}\})|x[a-f\d]{2}|.))|(?:\{(~)?(\w+(?:\([^)]*\))?(?:\.\w+(?:\([^)]*\))?)*)(?:[ \t]|(?=\r?\n)))|(\})|((?:.|[\r\n\f])+?)/gi,s=/(?:^|\.)(\w+)(?:\(([^)]*)\))?/g,l=/^(['"])((?:\\.|(?!\1)[^\\])*)\1$/,o=/\\(u(?:[a-f\d]{4}|{[a-f\d]{1,6}})|x[a-f\d]{2}|.)|([^\\])/gi,i=new Map([["n","\n"],["r","\r"],["t","\t"],["b","\b"],["f","\f"],["v","\v"],["0","\0"],["\\","\\"],["e",""],["a",""]]);function unescape(e){const t="u"===e[0],r="{"===e[1];return t&&!r&&5===e.length||"x"===e[0]&&3===e.length?String.fromCharCode(parseInt(e.slice(1),16)):t&&r?String.fromCodePoint(parseInt(e.slice(2,-1),16)):i.get(e)||e}function parseArguments(e,t){const r=[],n=t.trim().split(/\s*,\s*/g);let s;for(const i of n){const t=Number(i);if(Number.isNaN(t)){if(!(s=i.match(l)))throw new Error(`Invalid Chalk template style argument: ${i} (in style '${e}')`);r.push(s[2].replace(o,(e,t,r)=>t?unescape(t):r))}else r.push(t)}return r}function parseStyle(e){s.lastIndex=0;const t=[];let r;for(;null!==(r=s.exec(e));){const e=r[1];if(r[2]){const n=parseArguments(e,r[2]);t.push([e].concat(n))}else t.push([e])}return t}function buildStyle(e,t){const r={};for(const s of t)for(const e of s.styles)r[e[0]]=s.inverse?null:e.slice(1);let n=e;for(const[s,l]of Object.entries(r))if(Array.isArray(l)){if(!(s in n))throw new Error("Unknown Chalk style: "+s);n=l.length>0?n[s](...l):n[s]}return n}var templates=(e,t)=>{const r=[],s=[];let l=[];if(t.replace(n,(t,n,o,i,c,a)=>{if(n)l.push(unescape(n));else if(i){const t=l.join("");l=[],s.push(0===r.length?t:buildStyle(e,r)(t)),r.push({inverse:o,styles:parseStyle(i)})}else if(c){if(0===r.length)throw new Error("Found extraneous } in Chalk template literal");s.push(buildStyle(e,r)(l.join(""))),l=[],r.pop()}else l.push(a)}),s.push(l.join("")),r.length>0){const e=`Chalk template literal is missing ${r.length} closing bracket${1===r.length?"":"s"} (\`}\`)`;throw new Error(e)}return s.join("")};const{stdout:c,stderr:a}=t,{stringReplaceAll:u,stringEncaseCRLFWithFirstIndex:p}=r,{isArray:h}=Array,f=["ansi","ansi","ansi256","ansi16m"],g=Object.create(null);class d{constructor(e){return chalkFactory(e)}}const chalkFactory=e=>{const t={};return((e,t={})=>{if(t.level&&!(Number.isInteger(t.level)&&t.level>=0&&t.level<=3))throw new Error("The `level` option should be an integer from 0 to 3");const r=c?c.level:0;e.level=void 0===t.level?r:t.level})(t,e),t.template=(...e)=>chalkTag(t.template,...e),Object.setPrototypeOf(t,Chalk.prototype),Object.setPrototypeOf(t.template,t),t.template.constructor=()=>{throw new Error("`chalk.constructor()` is deprecated. Use `new chalk.Instance()` instead.")},t.template.Instance=d,t.template};function Chalk(e){return chalkFactory(e)}for(const[C,O]of Object.entries(e))g[C]={get(){const e=createBuilder(this,createStyler(O.open,O.close,this._styler),this._isEmpty);return Object.defineProperty(this,C,{value:e}),e}};g.visible={get(){const e=createBuilder(this,this._styler,!0);return Object.defineProperty(this,"visible",{value:e}),e}};const v=["rgb","hex","keyword","hsl","hsv","hwb","ansi","ansi256"];for(const C of v)g[C]={get(){const{level:t}=this;return function(...r){const n=createStyler(e.color[f[t]][C](...r),e.color.close,this._styler);return createBuilder(this,n,this._isEmpty)}}};for(const C of v){g["bg"+C[0].toUpperCase()+C.slice(1)]={get(){const{level:t}=this;return function(...r){const n=createStyler(e.bgColor[f[t]][C](...r),e.bgColor.close,this._styler);return createBuilder(this,n,this._isEmpty)}}}}const m=Object.defineProperties(()=>{},{...g,level:{enumerable:!0,get(){return this._generator.level},set(e){this._generator.level=e}}}),createStyler=(e,t,r)=>{let n,s;return void 0===r?(n=e,s=t):(n=r.openAll+e,s=t+r.closeAll),{open:e,close:t,openAll:n,closeAll:s,parent:r}},createBuilder=(e,t,r)=>{const builder=(...e)=>h(e[0])&&h(e[0].raw)?applyStyle(builder,chalkTag(builder,...e)):applyStyle(builder,1===e.length?""+e[0]:e.join(" "));return Object.setPrototypeOf(builder,m),builder._generator=e,builder._styler=t,builder._isEmpty=r,builder},applyStyle=(e,t)=>{if(e.level<=0||!t)return e._isEmpty?"":t;let r=e._styler;if(void 0===r)return t;const{openAll:n,closeAll:s}=r;if(-1!==t.indexOf(""))for(;void 0!==r;)t=u(t,r.close,r.open),r=r.parent;const l=t.indexOf("\n");return-1!==l&&(t=p(t,s,n,l)),n+t+s};let y;const chalkTag=(e,...t)=>{const[r]=t;if(!h(r)||!h(r.raw))return t.join(" ");const n=t.slice(1),s=[r.raw[0]];for(let l=1;l<r.length;l++)s.push(String(n[l-1]).replace(/[{}\\]/g,"\\$&"),String(r.raw[l]));return void 0===y&&(y=templates),y(e,s.join(""))};Object.defineProperties(Chalk.prototype,g);const b=Chalk();b.supportsColor=c,b.stderr=Chalk({level:a?a.level:0}),b.stderr.supportsColor=a;var w=b;export default w;